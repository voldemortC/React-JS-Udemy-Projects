{"ast":null,"code":"var _jsxFileName = \"/home/digimantra/My space/Udemy-Projects/15.React-RouterPractice/frontend/src/components/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventItem from '../EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  console.log(data, \"datadatadata\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  console.log(response, \"responseresponse\");\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch detauils'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","console","log","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/home/digimantra/My space/Udemy-Projects/15.React-RouterPractice/frontend/src/components/pages/EventDetail.js"],"sourcesContent":["import {useLoaderData, json} from 'react-router-dom';\nimport EventItem from '../EventItem';\nconst EventDetailPage = () => {\n    const data = useLoaderData();\n    console.log(data, \"datadatadata\")\n    return(\n        <EventItem event = {data.event}/>\n    );\n}\nexport default EventDetailPage;\n\nexport async function loader({request, params}){\n    const id = params.eventId;\n    const response= await fetch('http://localhost:8080/events/' + id);\n    console.log(response, \"responseresponse\");\n    if(!response.ok){\n        throw json({message : 'Could not fetch detauils'}, { status : 500})\n    } else {\n        return response;\n    }\n}"],"mappings":";;AAAA,SAAQA,aAAa,EAAEC,IAAI,QAAO,kBAAkB;AACpD,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5BQ,OAAO,CAACC,GAAG,CAACF,IAAI,EAAE,cAAc,CAAC;EACjC,oBACIH,OAAA,CAACF,SAAS;IAACQ,KAAK,EAAIH,IAAI,CAACG;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEzC,CAAC;AAAAR,EAAA,CANKD,eAAe;EAAA,QACJL,aAAa;AAAA;AAAAe,EAAA,GADxBV,eAAe;AAOrB,eAAeA,eAAe;AAE9B,OAAO,eAAeW,MAAMA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EACjEZ,OAAO,CAACC,GAAG,CAACa,QAAQ,EAAE,kBAAkB,CAAC;EACzC,IAAG,CAACA,QAAQ,CAACE,EAAE,EAAC;IACZ,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAG;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAG;IAAG,CAAC,CAAC;EACvE,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}