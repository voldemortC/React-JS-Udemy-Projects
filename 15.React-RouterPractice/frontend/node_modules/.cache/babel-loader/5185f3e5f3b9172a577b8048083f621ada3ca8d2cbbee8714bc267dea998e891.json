{"ast":null,"code":"var _jsxFileName = \"/home/digimantra/My space/Udemy-Projects/15.React-RouterPractice/frontend/src/components/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"0qsQ0LJMbp4ZAcOenpedLepO/y4=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return throw new Response(JSON.stringify({ message : 'Could not fetch events.'}), ({status : 500, }));\n    return json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\n\n//hooks can't be used inside loader function\nexport default EventsPage;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","status","resData","event","$RefreshReg$"],"sources":["/home/digimantra/My space/Udemy-Projects/15.React-RouterPractice/frontend/src/components/pages/Events.js"],"sourcesContent":["import { useLoaderData, json } from 'react-router-dom';\nimport EventsList from '../EventsList';\n\nfunction EventsPage() {\n  const events = useLoaderData();\n\n  return (\n    <>\n        {/* \n          <div style={{ textAlign: 'center' }}>\n            {isLoading && <p>Loading...</p>}\n            {error && <p>{error}</p>}\n          </div> \n        */}\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport async function loader(){\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n      // return throw new Response(JSON.stringify({ message : 'Could not fetch events.'}), ({status : 500, }));\n      return json(\n        { message : 'Could not fetch events.'},\n        { status : 500 }\n      )\n    } else {\n      const resData = await response.json();\n      return resData.event;\n    }\n  }\n  \n//hooks can't be used inside loader function\nexport default EventsPage;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGT,aAAa,CAAC,CAAC;EAE9B,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eAOEN,OAAA,CAACF,UAAU;MAACO,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACN,EAAA,CAdQD,UAAU;EAAA,QACFP,aAAa;AAAA;AAAAe,EAAA,GADrBR,UAAU;AAgBnB,OAAO,eAAeS,MAAMA,CAAA,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,OAAOlB,IAAI,CACT;MAAEmB,OAAO,EAAG;IAAyB,CAAC,EACtC;MAAEC,MAAM,EAAG;IAAI,CACjB,CAAC;EACH,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAChB,IAAI,CAAC,CAAC;IACrC,OAAOqB,OAAO,CAACC,KAAK;EACtB;AACF;;AAEF;AACA,eAAehB,UAAU;AAAC,IAAAQ,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}