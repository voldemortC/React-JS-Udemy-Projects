{"ast":null,"code":"import { uiAction } from './ui-slice';\nimport { cartAction } from './cart-slice';\n//below sendCartData is an action creater or a thunk tht is used to perform async tasks inside redux reducer\n//this is the code that is behind cartSlice.actoins and uiSlice.actions.\n//before dipatching the action this is considered a normal javascript function hence async tasks can be performed..\n\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-14ebb-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartAction.replaceCart({\n        item: cartData.item || [],\n        totalQuantiy: cartData.totalQuantiy\n      }));\n    } catch (error) {\n      dispatch(uiAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiAction.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      console.log(cart, 'cartcartcart');\n      const response = await fetch('https://react-http-14ebb-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          item: cart.item,\n          totalQuantiy: cart.totalQuantiy\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiAction.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiAction.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiAction","cartAction","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","item","totalQuantiy","error","showNotification","status","title","message","sendCartData","cart","sendRequest","console","log","method","body","JSON","stringify"],"sources":["/home/digimantra/My space/Udemy-Projects/13.redux-advanced/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { uiAction } from './ui-slice';\nimport { cartAction } from './cart-slice';\n//below sendCartData is an action creater or a thunk tht is used to perform async tasks inside redux reducer\n//this is the code that is behind cartSlice.actoins and uiSlice.actions.\n//before dipatching the action this is considered a normal javascript function hence async tasks can be performed..\n\nexport const fetchCartData = () => {\n  return async(dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-14ebb-default-rtdb.firebaseio.com/cart.json');\n      \n      if(!response.ok){\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n\n    try{\n      const cartData = await fetchData();\n      dispatch(cartAction.replaceCart({\n        item : cartData.item || [],\n        totalQuantiy : cartData.totalQuantiy,\n      }));\n    } catch (error) {\n      dispatch(\n        uiAction.showNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!',\n        })\n      );\n    }\n  }\n\n}\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n      dispatch(\n        uiAction.showNotification({\n          status: 'pending',\n          title: 'Sending...',\n          message: 'Sending cart data!',\n        })\n      );\n  \n      const sendRequest = async () => {\n        console.log(cart,'cartcartcart');\n        const response = await fetch(\n          'https://react-http-14ebb-default-rtdb.firebaseio.com/cart.json',\n          {\n            method: 'PUT',\n            body: JSON.stringify({\n              item: cart.item,\n              totalQuantiy: cart.totalQuantiy,\n            }),\n          }\n        );\n  \n        if (!response.ok) {\n          throw new Error('Sending cart data failed.');\n        }\n      };\n  \n      try {\n        await sendRequest();\n  \n        dispatch(\n          uiAction.showNotification({\n            status: 'success',\n            title: 'Success!',\n            message: 'Sent cart data successfully!',\n          })\n        );\n      } catch (error) {\n        dispatch(\n          uiAction.showNotification({\n            status: 'error',\n            title: 'Error!',\n            message: 'Sending cart data failed!',\n          })\n        );\n      }\n    };\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,UAAU,QAAQ,cAAc;AACzC;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAMC,QAAQ,IAAK;IACxB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,CAAC;MAE9F,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC;IAED,IAAG;MACD,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,UAAU,CAACW,WAAW,CAAC;QAC9BC,IAAI,EAAGF,QAAQ,CAACE,IAAI,IAAI,EAAE;QAC1BC,YAAY,EAAGH,QAAQ,CAACG;MAC1B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,QAAQ,CACNH,QAAQ,CAACgB,gBAAgB,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AAEH,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOlB,QAAQ,IAAK;IACzBA,QAAQ,CACNH,QAAQ,CAACgB,gBAAgB,CAAC;MACxBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IAED,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BC,OAAO,CAACC,GAAG,CAACH,IAAI,EAAC,cAAc,CAAC;MAChC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAAgE,EAChE;QACEmB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBf,IAAI,EAAEQ,IAAI,CAACR,IAAI;UACfC,YAAY,EAAEO,IAAI,CAACP;QACrB,CAAC;MACH,CACF,CAAC;MAED,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IAED,IAAI;MACF,MAAMc,WAAW,CAAC,CAAC;MAEnBnB,QAAQ,CACNH,QAAQ,CAACgB,gBAAgB,CAAC;QACxBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdZ,QAAQ,CACNH,QAAQ,CAACgB,gBAAgB,CAAC;QACxBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}